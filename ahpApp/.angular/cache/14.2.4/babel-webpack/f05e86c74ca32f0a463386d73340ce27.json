{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/autocomplete\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\n\nfunction DecisionComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2.name, \" \");\n  }\n}\n\nexport class DecisionComponent {\n  constructor() {\n    this.myControl = new FormControl('');\n    this.options = [{\n      name: 'Mary'\n    }, {\n      name: 'Shelley'\n    }, {\n      name: 'Igor'\n    }];\n  }\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => {\n      const name = typeof value === 'string' ? value : value?.name;\n      return name ? this._filter(name) : this.options.slice();\n    }));\n  }\n\n  displayFn(user) {\n    return user && user.name ? user.name : '';\n  }\n\n  _filter(name) {\n    const filterValue = name.toLowerCase();\n    return this.options.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n\n}\n\nDecisionComponent.ɵfac = function DecisionComponent_Factory(t) {\n  return new (t || DecisionComponent)();\n};\n\nDecisionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DecisionComponent,\n  selectors: [[\"decision-component\"]],\n  decls: 13,\n  vars: 6,\n  consts: [[1, \"decision-container\"], [1, \"participants\"], [1, \"part\"], [1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [3, \"displayWith\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function DecisionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Select the names of the participants in the decision:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 3)(5, \"mat-form-field\", 4)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Assignee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementStart(9, \"mat-autocomplete\", 6, 7);\n      i0.ɵɵtemplate(11, DecisionComponent_mat_option_11_Template, 2, 2, \"mat-option\", 8);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd()()()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(10);\n\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"displayWith\", ctx.displayFn);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 4, ctx.filteredOptions));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgForm, i2.FormControlDirective, i3.MatAutocomplete, i3.MatAutocompleteTrigger, i4.MatOption, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.AsyncPipe],\n  styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY2lzaW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUFDRjs7QUFFQTtFQUNFLFdBQUE7QUFDRjs7QUFFQTtFQUNFLFNBQUE7QUFDRiIsImZpbGUiOiJkZWNpc2lvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmgzIHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuIl19 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,SAASC,GAAT,EAAcC,SAAd,QAA+B,gBAA/B;;;;;;;;;;;ICUUC;IAIEA;IACFA;;;;;IAHEA;IAEAA;IAAAA;;;;ADHZ,OAAM,MAAOC,iBAAP,CAAwB;EAL9BC;IAME,iBAAY,IAAIL,WAAJ,CAAsC,EAAtC,CAAZ;IACA,eAAyB,CACvB;MAAEM,IAAI,EAAE;IAAR,CADuB,EAEvB;MAAEA,IAAI,EAAE;IAAR,CAFuB,EAGvB;MAAEA,IAAI,EAAE;IAAR,CAHuB,CAAzB;EA4BD;;EArBCC,QAAQ;IACN,KAAKC,eAAL,GAAuB,KAAKC,SAAL,CAAeC,YAAf,CAA4BC,IAA5B,CACrBT,SAAS,CAAC,EAAD,CADY,EAErBD,GAAG,CAAEW,KAAD,IAAU;MACZ,MAAMN,IAAI,GAAG,OAAOM,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,EAAEN,IAAxD;MACA,OAAOA,IAAI,GAAG,KAAKO,OAAL,CAAaP,IAAb,CAAH,GAAkC,KAAKQ,OAAL,CAAaC,KAAb,EAA7C;IACD,CAHE,CAFkB,CAAvB;EAOD;;EAEDC,SAAS,CAACC,IAAD,EAAkB;IACzB,OAAOA,IAAI,IAAIA,IAAI,CAACX,IAAb,GAAoBW,IAAI,CAACX,IAAzB,GAAgC,EAAvC;EACD;;EAEOO,OAAO,CAACP,IAAD,EAAa;IAC1B,MAAMY,WAAW,GAAGZ,IAAI,CAACa,WAAL,EAApB;IAEA,OAAO,KAAKL,OAAL,CAAaM,MAAb,CAAqBC,MAAD,IACzBA,MAAM,CAACf,IAAP,CAAYa,WAAZ,GAA0BG,QAA1B,CAAmCJ,WAAnC,CADK,CAAP;EAGD;;AA7B2B;;;mBAAjBd;AAAiB;;;QAAjBA;EAAiBmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd9BxB,+BAAgC,CAAhC,EAAgC,KAAhC,EAAgC,CAAhC,EAAgC,CAAhC,EAAgC,IAAhC,EAAgC,CAAhC;MAEqBA;MAAqDA;MACtEA,gCAA2B,CAA3B,EAA2B,gBAA3B,EAA2B,CAA3B,EAA2B,CAA3B,EAA2B,WAA3B;MAEeA;MAAQA;MACnBA;MAMAA;MACEA;;MAMFA;;;;;;MAVEA;MAAAA,4CAAyB,iBAAzB,EAAyByB,GAAzB;MAGwCzB;MAAAA;MAEnBA;MAAAA","names":["FormControl","map","startWith","i0","DecisionComponent","constructor","name","ngOnInit","filteredOptions","myControl","valueChanges","pipe","value","_filter","options","slice","displayFn","user","filterValue","toLowerCase","filter","option","includes","selectors","decls","vars","consts","template","_r0"],"sourceRoot":"","sources":["C:\\ahp-project\\ahpApp\\src\\app\\components\\decision\\decision.component.ts","C:\\ahp-project\\ahpApp\\src\\app\\components\\decision\\decision.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nexport interface Participant {\n  name: string;\n}\n\n@Component({\n  selector: 'decision-component',\n  templateUrl: './decision.component.html',\n  styleUrls: ['./decision.component.scss'],\n})\nexport class DecisionComponent implements OnInit {\n  myControl = new FormControl<string | Participant>('');\n  options: Participant[] = [\n    { name: 'Mary' },\n    { name: 'Shelley' },\n    { name: 'Igor' },\n  ];\n  filteredOptions?: Observable<Participant[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => {\n        const name = typeof value === 'string' ? value : value?.name;\n        return name ? this._filter(name as string) : this.options.slice();\n      })\n    );\n  }\n\n  displayFn(user: Participant): string {\n    return user && user.name ? user.name : '';\n  }\n\n  private _filter(name: string): Participant[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options.filter((option) =>\n      option.name.toLowerCase().includes(filterValue)\n    );\n  }\n}\n","<div class=\"decision-container\">\n  <div class=\"participants\">\n    <h3 class=\"part\">Select the names of the participants in the decision:</h3>\n    <form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Assignee</mat-label>\n        <input\n          type=\"text\"\n          matInput\n          [formControl]=\"myControl\"\n          [matAutocomplete]=\"auto\"\n        />\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\">\n          <mat-option\n            *ngFor=\"let option of filteredOptions | async\"\n            [value]=\"option\"\n          >\n            {{ option.name }}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}